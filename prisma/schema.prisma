datasource db {
  provider = "postgres"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ChannelType{
  TEXT 
  AUDIO
  VIDEO
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String 
  imageUrl String 
  email String 

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
  id String @id @default(uuid())
  name String 
  imageUrl String 
  inviteCode String 

  profileId String
  profile Profile @relation(fields:[profileId], references: [id], onDelete: Cascade )

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)
  
  profileId String
  profile Profile @relation(fields:[profileId], references: [id], onDelete: Cascade )

  serverId String
  server Server @relation(fields:[serverId], references: [id], onDelete: Cascade )

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

model Channel{
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  serverId String
  server Server @relation(fields:[serverId], references: [id], onDelete: Cascade )

  profileId String
  profile Profile @relation(fields:[profileId], references: [id], onDelete: Cascade )
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}
